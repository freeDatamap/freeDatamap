{
    "$schema": "http://www.freedatamap.com/jsonConfigSchema/schema#",
    "$charset": "UTF-8",
    "config": {
        "name": "videos.config",
        "root": null,
        "txtFontSize": 13,
        "displayColumnsAsAttributes": false,
        "center": null,
        "depth": 2,
        "sort": "Dates",
        "sortDescendant": true,
        "csvSepIsSemicolon": true,
        "dm_sourceFile": "TV/videos.csv",
        "dm_DatamapName": "Vidéos",
        "$schema": "http://www.freedatamap.com/jsonConfigSchema/schema#",
        "icon": "../../config/images/config/config_root.png",
        "possibleProperties": null,
        "maxNbOfColumns2tree": 10,
        "displayTransversalConnections": true,
        "displayArrowsOfTransversalConnections": true,
        "retintIcons": false,
        "dontReduceNumberOfChildren": true,
        "columnNames": ["IMPUTATION", "ANNEE", "CATEGORIE", "TITRE", "ADRESSE URL", "icon"],
        "columns": [{
            "name": "IMPUTATION",
            "array index": 0,
            "columnIndex": 0
        }, {
            "name": "ANNEE",
            "array index": 1,
            "columnIndex": 1
        }, {
            "name": "CATEGORIE",
            "array index": 2,
            "columnIndex": 2
        }, {
            "name": "TITRE",
            "array index": 3,
            "columnIndex": 3
        }],
        "aggregate": [{
            "name": "items",
            "value": "var output = 1, child ;
if(node.children && (node.children.length > 0)) {
    var i = node.children.length - 1 ;
    output = 0 ;
    for(; i>=0; i--) {
        child = node.children[i] ;
        if(!child.rawNode[propName]) {
            console.log('----- WARNING ! during items aggregation ITEMS VALUE ERROR ----------->' + dm_Tools.getNodePath(child), ' items = ' + child.rawNode[propName]) ;
        }
        output += node.children[i].rawNode[propName] ;
    }
    if(output > 1) {
        if(!node.rawNode[propName + '.dm_props']) node.rawNode[propName + '.dm_props'] = {} ;
        //node.rawNode[propName + '.dm_props'].visible = true ;
    }
} else {
    if(!node.rawNode[propName + '.dm_props']) node.rawNode[propName + '.dm_props'] = {} ;
    node.rawNode[propName + '.dm_props'].visible = false ;
    node.rawNode[propName + '.dm_props'].edit = false ;
}
if(!output) {
    console.log('----- WARNING ! during items aggregation ITEMS VALUE ERROR ----------->' + dm_Tools.getNodePath(node), ' items = ' + output) ;
}
return output ;",
            "funcDropdown": "count leaves",
            "execAfterChildrenVisit": true,
            "onlyLeaves": true,
            "label": "Items",
            "type": "text",
            "source": "aggregation",
            "dm_props": {
                "dontExport": true,
                "hideFromEdit": true
            }
        /*
        }, {
            "name": "underlyingRawValues",
            "value": "return dm_Tools.getUnderlyingRawValuesPerNode(node, propName) ;",
            "execAfterChildrenVisit": true
        */
        }, {
            "name": "itemsPie",
            "value": "var output, elt;
if(node.children && (node.children.length > 0) && !node.dm_isReducedNode) {
    var levelMin = dm_Tools.getDepth(node) ;
    var colName ;
    var doIt = function(node) {
        if (!output) {
            output = [] ;
        }
        elt = {} ;
        output.push(elt) ;
        elt.value = node.rawNode['items'] ;
        elt.name = node.name ; //dm_Tools.getNodePath(node, '', true, null, levelMin+1) ;
        elt.unit = 'item(s)' ;
    };
    var parentLevel = dm_Tools.getDepth(node) ;
    var depth = 1 ;
    var dive = function(node) {
        if (node) {
            var nodeLevel = dm_Tools.getDepth(node) ;
            if (nodeLevel == parentLevel + depth) {
                doIt(node);

                if(!colName) {
                    var configNode = dm_Tools.getConfig(node) ;
                    if(configNode && configNode.columns && (configNode.columns.length >= nodeLevel)) {
                        var col = configNode.columns[nodeLevel-1] ;
                        if(col) colName = col.name ;
                    }
                }
            } else if ((dm_Tools.getDepth(node) < parentLevel + depth) && (node.children)) {
                node.children.forEach(function(child) {
                    dive(child);
                });
            }
        }
    } ;
    dive(node);
    if(!node.rawNode['itemsPie.dm_props']) node.rawNode['itemsPie.dm_props'] = {} ;
    node.rawNode['itemsPie.dm_props'].label = colName ;
    //node.rawNode['itemsPie.dm_props'].visible = true ;
} else {
    if(!node.rawNode['itemsPie.dm_props']) node.rawNode['itemsPie.dm_props'] = {}
    node.rawNode['itemsPie.dm_props'].visible = false ;
    node.rawNode['itemsPie.dm_props'].edit = false ;
}
return output ;",
            "execAfterChildrenVisit": true,
            "dm_props": {
                "dontExport": true,
                "hideFromEdit": true
            }
        /*
        },{
            "name": "underlyingRawValuesCharts",
            "value": "dm_Tools.buildCharts4underlyingRawValues(node, 'underlyingRawValues') ;",
            "execAfterChildrenVisit": true
        */
        },{
            "name": "treeSunburst",
            "value": "
if(!node.children || (node.children.length == 0) || node.dm_isReducedNode) {
    if(!node.rawNode['treeSunburst.dm_props']) node.rawNode['treeSunburst.dm_props'] = {}
    node.rawNode['treeSunburst.dm_props'].visible = false ;
    node.rawNode['treeSunburst.dm_props'].edit = false ;
} else {
    if(!node.rawNode['treeSunburst.dm_props']) node.rawNode['treeSunburst.dm_props'] = {}
    node.rawNode['treeSunburst.dm_props'].visible = true ;
}
return null ;",
            "execAfterChildrenVisit": true,
            "dm_props": {
                "dontExport": true,
                "hideFromEdit": true
            }
        }],
        "styles": [{
            "name": "root",
            "level": 0,
            "arrow": true,
            "arc": false,
            "rNod": 10,
            "link": 180,
            "color": "#8C2C0E",
            "icon.dm_props": {
                "scaleFactor": 6,
                "width": 200,
                "height": 200,
                "textX": 3
            },
            "backgroundImage": "TV/images/Sophia.jpg",
            "backgroundImage.dm_props": {
                "opacity": 0.2
            }
        }, {
            "name": "level 1",
            "level": 1,
            "arrow": true,
            "arc": false,
            "rNod": 10,
            "link": 170,
            "color": "#842B5B",
            "icon.dm_props": {
                "scaleFactor": 6,
                "width": 200,
                "height": 200,
                "textX": 3
            },
            "backgroundImage": "TV/images/Sophia.jpg",
            "backgroundImage.dm_props": {
                "opacity": 0.2
            }
        }, {
            "name": "level 2",
            "level": 2,
            "arrow": true,
            "arc": false,
            "rNod": 9,
            "link": 160,
            "color": "#00668E",
            "backgroundImage": "TV/images/Sophia.jpg",
            "backgroundImage.dm_props": {
                "opacity": 0.17
            }
        }, {
            "name": "level 3",
            "level": 3,
            "arrow": true,
            "arc": false,
            "rNod": 9,
            "link": 150,
            "color": "#DDA289",
            "backgroundImage": "TV/images/Sophia.jpg",
            "backgroundImage.dm_props": {
                "opacity": 0.17
            }
        }, {
            "name": "leaf",
            "level": 4,
            "arrow": false,
            "arc": true,
            "rNod": 4,
            "link": 200,
            "color": "#676462", /* "#B7B0A7"
            "attrPaneCol": "#c7c7c7",
            "txtCol": "#7f7f7f",*/
            "icon": "TV/icones/video.png",
            "icon.dm_props": {
                "scaleFactor": 9,
                "type": "image",
                "order": 5,
                "width": 256,
                "height": 256,
                "visible": true
            },
            "backgroundImage": "TV/images/Sophia.jpg",
            "backgroundImage.dm_props": {
                "opacity": 0.15
            }
        }],
        "displayProps": [{
            "name": "root",
            "children": [
            {
                "name": "itemsPie",
                "label": "Nombre de vidéos",
                "type": "graph",
                "unit": "vidéo(s)",
                "3D": true,
                "doTransition": true,
                "edit": false,
                "visible": true,
                "order": 45,
                "dontExport": true,
                "keepAfterGoto": true
            }, {
                "name": "treeSunburst",
                "label": "Vidéos",
                "type": "graph",
                "graphModel": "sunburstChart",
                "maxLength": 12,
                "edit": false,
                "visible": true,
                "order": 50,
                "dontExport": true,
                "keepAfterGoto": true
            }],
            "edit": false,
            "visible": false
        }, {
            "name": "level 1",
            "children": [
            {
                "name": "icon",
                "type": "image",
                "edit": false,
                "visible": true,
                "order": 5
            }, {
                "name": "itemsPie",
                "label": "Nombre de vidéos",
                "type": "graph",
                "unit": "vidéo(s)",
                "3D": true,
                "doTransition": true,
                "edit": false,
                "visible": true,
                "order": 45,
                "dontExport": true,
                "keepAfterGoto": true
            }, {
                "name": "treeSunburst",
                "label": "Vidéos",
                "type": "graph",
                "graphModel": "sunburstChart",
                "maxLength": 12,
                "edit": false,
                "visible": true,
                "order": 50,
                "dontExport": true,
                "keepAfterGoto": true
            }],
            "edit": false,
            "visible": false
        }, {
            "name": "level 2",
            "children": [
            {
                "name": "itemsPie",
                "label": "Nombre de vidéos",
                "type": "graph",
                "unit": "vidéo(s)",
                "3D": true,
                "doTransition": true,
                "edit": false,
                "visible": true,
                "order": 45,
                "dontExport": true,
                "keepAfterGoto": true
            }, {
                "name": "treeSunburst",
                "label": "Vidéos",
                "type": "graph",
                "graphModel": "sunburstChart",
                "maxLength": 12,
                "edit": false,
                "visible": true,
                "order": 50,
                "dontExport": true,
                "keepAfterGoto": true
            }],
            "edit": false,
            "visible": false
        }, {
            "name": "level 3",
            "children": [
            {
                "name": "itemsPie",
                "label": "Nombre de vidéos",
                "type": "graph",
                "unit": "vidéo(s)",
                "3D": true,
                "doTransition": true,
                "edit": false,
                "visible": true,
                "order": 45,
                "dontExport": true,
                "keepAfterGoto": true
            }, {
                "name": "treeSunburst",
                "label": "Vidéos",
                "type": "graph",
                "graphModel": "sunburstChart",
                "maxLength": 12,
                "edit": false,
                "visible": true,
                "order": 50,
                "dontExport": true,
                "keepAfterGoto": true
            }],
            "edit": false,
            "visible": false
        }, {
            "name": "leaf",
            "children": [
            {
                "name": "icon",
                "maxWidthOrHeight": 100
            },
            {
                "name": "ADRESSE URL",
                "label": "<img src=\"data/images/TV/icones/youTube.png\"/>&nbsp;&nbsp;&nbsp;Vidéo de la présentation",
                "type": "action",
                "content.type": "window url",
                "edit": false,
                "visible": true,
                "order": 45
            }],
            "edit": false,
            "visible": false
        }],
        "setColumns2node": {},
        "maxDepthForExport": 2
    }
}